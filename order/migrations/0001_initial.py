# Generated by Django 5.2.1 on 2025-06-02 13:46

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('delivery', '0005_alter_deliverymethodforrole_delivery_method_and_more'),
        ('employee', '0001_initial'),
        ('product', '0004_banner'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=23, unique=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('mandatory', models.BooleanField(default=True)),
                ('sort_number', models.SmallIntegerField(default=0, verbose_name='Sort Number')),
                ('role', models.CharField(blank=True, choices=[('CRT', 'سبد خرید'), ('NEW', 'جدید'), ('RED', 'آماده تحویل'), ('DLI', 'تحویل داده شده'), ('CAN', 'لغو شده')], max_length=3, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('custom_style_class', models.CharField(blank=True, max_length=23, null=True, verbose_name='Custom Style Class')),
            ],
            options={
                'verbose_name': 'Order Status',
                'verbose_name_plural': 'Order Statuses',
                'ordering': ['-sort_number'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Create Date')),
                ('last_change_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Last Change Date')),
                ('payment_data', models.DateField(blank=True, null=True, verbose_name='Payment Date')),
                ('status', models.CharField(choices=[('CRT', 'سبد خرید'), ('PAY', 'پرداخت شده'), ('CON', 'تأیید مالی'), ('END', 'نهایی شده')], default='CRT', max_length=3, validators=[django.core.validators.MinLengthValidator(3)])),
                ('total_price', models.PositiveIntegerField(default=0, verbose_name='Total Price')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cart_list', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cart',
                'verbose_name_plural': 'Carts',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=23, validators=[django.core.validators.MinLengthValidator(3)])),
                ('ready_date', models.DateField(blank=True, null=True, verbose_name='Ready Date')),
                ('description', models.TextField(blank=True, max_length=236, null=True)),
                ('internal_id', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Internal ID')),
                ('classify_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Classify ID')),
                ('product_price', models.PositiveIntegerField(default=0, verbose_name='Product Price')),
                ('fields', models.JSONField(default=dict)),
                ('options', models.JSONField(default=dict)),
                ('options_price', models.PositiveIntegerField(default=0, verbose_name='Options Price')),
                ('reports', models.JSONField(default=dict)),
                ('notes', models.JSONField(default=dict)),
                ('delivery_price', models.PositiveIntegerField(default=0, verbose_name='Delivery Price')),
                ('total_price', models.PositiveIntegerField(default=0, verbose_name='Total Price')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_list', to='order.cart')),
                ('delivery_receipt', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='delivery_receipt_for_order', to='delivery.deliveryreceipt', verbose_name='Delivery Receipt')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_list', to='product.product')),
                ('saler_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sale_order_list', to='employee.employee', verbose_name='Saler Employee')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_list', to='order.orderstatus')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['cart'],
            },
        ),
        migrations.CreateModel(
            name='OrderStatusAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_order_status_list', to='employee.employee')),
                ('order_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_list', to='order.orderstatus', verbose_name='Order Status')),
            ],
            options={
                'verbose_name': 'Order Status Access',
                'verbose_name_plural': 'Order Status Accesses',
            },
        ),
        migrations.AddField(
            model_name='orderstatus',
            name='employee_access',
            field=models.ManyToManyField(through='order.OrderStatusAccess', through_fields=('order_status', 'employee'), to='employee.employee', verbose_name='Employee Access'),
        ),
    ]
