openapi: 3.0.3
info:
  title: TeamGraphic API
  version: 1.0.0
  description: API for TeamGraphic BackEnd
paths:
  /api/addresses/:
    get:
      operationId: addresses_list
      tags:
      - addresses
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
    post:
      operationId: addresses_create
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/addresses/{id}/:
    get:
      operationId: addresses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Address.
        required: true
      tags:
      - addresses
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: addresses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Address.
        required: true
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: addresses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Address.
        required: true
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: addresses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Address.
        required: true
      tags:
      - addresses
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/introductions/:
    get:
      operationId: introductions_list
      tags:
      - introductions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Introduction'
          description: ''
    post:
      operationId: introductions_create
      tags:
      - introductions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Introduction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Introduction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Introduction'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Introduction'
          description: ''
  /api/introductions/{id}/:
    get:
      operationId: introductions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Introduce.
        required: true
      tags:
      - introductions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Introduction'
          description: ''
    put:
      operationId: introductions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Introduce.
        required: true
      tags:
      - introductions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Introduction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Introduction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Introduction'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Introduction'
          description: ''
    patch:
      operationId: introductions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Introduce.
        required: true
      tags:
      - introductions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIntroduction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIntroduction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIntroduction'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Introduction'
          description: ''
    delete:
      operationId: introductions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Introduce.
        required: true
      tags:
      - introductions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/roles/:
    get:
      operationId: roles_list
      tags:
      - roles
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
          description: ''
    post:
      operationId: roles_create
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /api/roles/{id}/:
    get:
      operationId: roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Role.
        required: true
      tags:
      - roles
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Role.
        required: true
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Role.
        required: true
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Role.
        required: true
      tags:
      - roles
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/signin/:
    post:
      operationId: signin_create
      tags:
      - signin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSignIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSignIn'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignIn'
          description: ''
  /api/signup/:
    post:
      operationId: signup_create
      tags:
      - signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSignUp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSignUp'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUp'
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/user/:
    get:
      operationId: user_list
      tags:
      - user
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: user_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/{id}/:
    get:
      operationId: user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user_profiles/:
    get:
      operationId: user_profiles_list
      tags:
      - user_profiles
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
          description: ''
    post:
      operationId: user_profiles_create
      tags:
      - user_profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/user_profiles/{id}/:
    get:
      operationId: user_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - user_profiles
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: user_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - user_profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: user_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - user_profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    delete:
      operationId: user_profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - user_profiles
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 23
          minLength: 3
        state:
          type: string
          nullable: true
          maxLength: 37
        city:
          type: string
          nullable: true
          maxLength: 37
        content:
          type: string
          maxLength: 300
        postal_code:
          type: string
          nullable: true
          maxLength: 10
          minLength: 11
        phone_number:
          type: string
          maxLength: 11
          minLength: 11
        plate_number:
          type: string
          maxLength: 10
        unit_number:
          type: string
          maxLength: 10
        is_default:
          type: boolean
        submit_date:
          type: string
          format: date
        user:
          type: integer
      required:
      - content
      - id
      - phone_number
      - plate_number
      - title
      - unit_number
      - user
    Introduction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 23
          minLength: 3
        number:
          type: integer
          maximum: 2147483647
          minimum: 0
        sort_number:
          type: integer
          maximum: 32767
          minimum: -32768
      required:
      - id
      - title
    PatchedAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 23
          minLength: 3
        state:
          type: string
          nullable: true
          maxLength: 37
        city:
          type: string
          nullable: true
          maxLength: 37
        content:
          type: string
          maxLength: 300
        postal_code:
          type: string
          nullable: true
          maxLength: 10
          minLength: 11
        phone_number:
          type: string
          maxLength: 11
          minLength: 11
        plate_number:
          type: string
          maxLength: 10
        unit_number:
          type: string
          maxLength: 10
        is_default:
          type: boolean
        submit_date:
          type: string
          format: date
        user:
          type: integer
    PatchedIntroduction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 23
          minLength: 3
        number:
          type: integer
          maximum: 2147483647
          minimum: 0
        sort_number:
          type: integer
          maximum: 32767
          minimum: -32768
    PatchedRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 23
          minLength: 3
        description:
          type: string
          nullable: true
          maxLength: 300
        sort_number:
          type: integer
          maximum: 32767
          minimum: -32768
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          maxLength: 11
          minLength: 11
        national_id:
          type: string
          nullable: true
          maxLength: 10
          minLength: 10
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_employee:
          type: boolean
        role:
          type: integer
          nullable: true
    PatchedUserProfile:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        birth_date:
          type: string
          format: date
          nullable: true
        gender:
          type: string
        description:
          type: string
          nullable: true
        introduce_from:
          type: integer
          nullable: true
          title: Introduction from
        job:
          type: string
          nullable: true
          maxLength: 25
    Role:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 23
          minLength: 3
        description:
          type: string
          nullable: true
          maxLength: 300
        sort_number:
          type: integer
          maximum: 32767
          minimum: -32768
      required:
      - id
      - title
    TokenObtainPair:
      type: object
      properties:
        phone_number:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - phone_number
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          maxLength: 11
          minLength: 11
        national_id:
          type: string
          nullable: true
          maxLength: 10
          minLength: 10
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_employee:
          type: boolean
        role:
          type: integer
          nullable: true
      required:
      - id
      - phone_number
    UserProfile:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        birth_date:
          type: string
          format: date
          nullable: true
        gender:
          type: string
        description:
          type: string
          nullable: true
        introduce_from:
          type: integer
          nullable: true
          title: Introduction from
        job:
          type: string
          nullable: true
          maxLength: 25
      required:
      - gender
      - user
    UserSignIn:
      type: object
      properties:
        phone_number:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - phone_number
    UserSignUp:
      type: object
      properties:
        phone_number:
          type: string
          maxLength: 11
          minLength: 11
        password:
          type: string
          writeOnly: true
          minLength: 8
        first_name:
          type: string
          maxLength: 73
          minLength: 3
      required:
      - first_name
      - password
      - phone_number
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
